{
    "id": 105,
    "url": "https://getbootstrap.com/docs/5.3/getting-started/contribute/",
    "title": "Contribute",
    "content": "View on GitHub                                Contribute                Help develop Bootstrap with our documentation build scripts and tests.                                    On this page                                On this page                                      Tooling setup    Using npm scripts    Sass    Autoprefixer    RTLCSS    Local documentation    Troubleshooting                                    Tooling setup Bootstrap uses npm scripts to build the documentation and compile source files. Our package.json houses these scripts for compiling code, running tests, and more. These aren\u2019t intended for use outside our repository and documentation.To use our build system and run our documentation locally, you\u2019ll need a copy of Bootstrap\u2019s source files and Node. Follow these steps and you should be ready to rock:Download and install Node.js, which we use to manage our dependencies.Either download Bootstrap\u2019s sources or fork and clone Bootstrap\u2019s repository.Navigate to the root /bootstrap directory and run npm install to install our local dependencies listed in package.json.When completed, you\u2019ll be able to run the various commands provided from the command line.Using npm scripts Our package.json includes numerous tasks for developing the project. Run npm run to see all the npm scripts in your terminal. Primary tasks include:TaskDescriptionnpm startCompiles CSS and JavaScript, builds the documentation, and starts a local server.npm run distCreates the dist/ directory with compiled files. Uses Sass, Autoprefixer, and terser.npm testRuns tests locally after running npm run distnpm run docs-serveBuilds and runs the documentation locally.Get started with Bootstrap via npm with our starter project! Head to the Sass & JS example template repository to see how to build and customize Bootstrap in your own npm project. Includes Sass compiler, Autoprefixer, Stylelint, PurgeCSS, and Bootstrap Icons.Sass Bootstrap uses Dart Sass for compiling our Sass source files into CSS files (included in our build process), and we recommend you do the same if you\u2019re compiling Sass using your own asset pipeline. We previously used Node Sass for Bootstrap v4, but LibSass and packages built on top of it, including Node Sass, are now deprecated.Dart Sass uses a rounding precision of 10 and for efficiency reasons does not allow adjustment of this value. We don\u2019t lower this precision during further processing of our generated CSS, such as during minification, but if you chose to do so we recommend maintaining a precision of at least 6 to prevent issues with browser rounding.Autoprefixer Bootstrap uses Autoprefixer (included in our build process) to automatically add vendor prefixes to some CSS properties at build time. Doing so saves us time and code by allowing us to write key parts of our CSS a single time while eliminating the need for vendor mixins like those found in v3.We maintain the list of browsers supported through Autoprefixer in a separate file within our GitHub repository. See .browserslistrc for details.RTLCSS Bootstrap uses RTLCSS to process compiled CSS and convert them to RTL \u2013 basically replacing horizontal direction aware properties (e.g. padding-left) with their opposite. It allows us only write our CSS a single time and make minor tweaks using RTLCSS control and value directives.Local documentation Running our documentation locally requires the use of Hugo, which gets installed via the hugo-bin npm package. Hugo is a blazingly fast and quite extensible static site generator that provides us: basic includes, Markdown-based files, templates, and more. Here\u2019s how to get it started:Run through the tooling setup above to install all dependencies.From the root /bootstrap directory, run npm run docs-serve in the command line.Open http://localhost:9001/ in your browser, and voil\u00e0.Learn more about using Hugo by reading its documentation.Troubleshooting Should you encounter problems with installing dependencies, uninstall all previous dependency versions (global and local). Then, rerun npm install."
}