{
    "id": 116,
    "url": "https://getbootstrap.com/docs/5.3/getting-started/download/",
    "title": "Download",
    "content": "View on GitHub                                Download                Download Bootstrap to get the compiled CSS and JavaScript, source code, or include it with your favorite package managers like npm, RubyGems, and more.                                    On this page                                On this page                                      Compiled CSS and JS    Source files    Examples    CDN via jsDelivr              Alternative CDNs              Package managers              npm        yarn        RubyGems        Composer        NuGet                                              Compiled CSS and JS Download ready-to-use compiled code for Bootstrap v5.3.3 to easily drop into your project, which includes:Compiled and minified CSS bundles (see CSS files comparison)Compiled and minified JavaScript plugins (see JS files comparison)This doesn\u2019t include documentation, source files, or any optional JavaScript dependencies like Popper.DownloadSource files Compile Bootstrap with your own asset pipeline by downloading our source Sass, JavaScript, and documentation files. This option requires some additional tooling:Sass compiler for compiling Sass source files into CSS filesAutoprefixer for CSS vendor prefixingShould you require our full set of build tools, they are included for developing Bootstrap and its docs, but they\u2019re likely unsuitable for your own purposes.Download sourceExamples If you want to download and examine our examples, you can grab the already built examples:Download ExamplesCDN via jsDelivr Skip the download with jsDelivr to deliver cached version of Bootstrap\u2019s compiled CSS and JS to your project.<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\"><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>If you\u2019re using our compiled JavaScript and prefer to include Popper separately, add Popper before our JS, via a CDN preferably.<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\" integrity=\"sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy\" crossorigin=\"anonymous\"></script>Alternative CDNs We recommend jsDelivr and use it ourselves in our documentation. However, in some cases\u2014like in some specific countries or environments\u2014you may need to use other CDN providers like cdnjs or unpkg.You\u2019ll find the same files on these CDN providers, albeit with different URLs. With cdnjs, you can use this direct Bootstrap package link to copy and paste ready-to-use HTML snippets for each dist file from any version of Bootstrap.If the SRI hashes differ for a given file, you shouldn\u2019t use the files from that CDN, because it means that the file was modified by someone else.Note that you should compare same length hashes, e.g. sha384 with sha384, otherwise it\u2019s expected for them to be different.As such, you can use an online tool like SRI Hash Generator to make sure that the hashes are the same for a given file.Alternatively, assuming you have OpenSSL installed, you can achieve the same from the CLI, for example:openssl dgst -sha384 -binary bootstrap.min.js | openssl base64 -APackage managers Pull in Bootstrap\u2019s source files into nearly any project with some of the most popular package managers. No matter the package manager, Bootstrap will require a Sass compiler and Autoprefixer for a setup that matches our official compiled versions.npm Install Bootstrap in your Node.js powered apps with the npm package:npm install bootstrap@5.3.3const bootstrap = require('bootstrap') or import bootstrap from 'bootstrap' will load all of Bootstrap\u2019s plugins onto a bootstrap object.The bootstrap module itself exports all of our plugins. You can manually load Bootstrap\u2019s plugins individually by loading the /js/dist/*.js files under the package\u2019s top-level directory.Bootstrap\u2019s package.json contains some additional metadata under the following keys:sass - path to Bootstrap\u2019s main Sass source filestyle - path to Bootstrap\u2019s non-minified CSS that\u2019s been compiled using the default settings (no customization)Get started with Bootstrap via npm with our starter project! Head to the Sass & JS example template repository to see how to build and customize Bootstrap in your own npm project. Includes Sass compiler, Autoprefixer, Stylelint, PurgeCSS, and Bootstrap Icons.yarn Install Bootstrap in your Node.js powered apps with the yarn package:yarn add bootstrap@5.3.3RubyGems Install Bootstrap in your Ruby apps using Bundler (recommended) and RubyGems by adding the following line to your Gemfile:gem 'bootstrap', '~> 5.3.3'Alternatively, if you\u2019re not using Bundler, you can install the gem by running this command:gem install bootstrap -v 5.3.3See the gem\u2019s README for further details.Composer You can also install and manage Bootstrap\u2019s Sass and JavaScript using Composer:composer require twbs/bootstrap:5.3.3NuGet If you develop in .NET Framework, you can also install and manage Bootstrap\u2019s CSS or Sass and JavaScript using NuGet. Newer projects should use libman or another method as NuGet is designed for compiled code, not frontend assets.Install-Package bootstrapInstall-Package bootstrap.sass"
}