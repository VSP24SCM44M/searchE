{
    "id": 111,
    "url": "https://getbootstrap.com/docs/5.3/getting-started/parcel/",
    "title": "Bootstrap and Parcel",
    "content": "View on GitHub                                Bootstrap and Parcel                The official guide for how to include and bundle Bootstrap\u2019s CSS and JavaScript in your project using Parcel.                                    On this page                                On this page                                      Setup    Project structure    Configure Parcel    Import Bootstrap                                    Want to skip to the end? Download the source code and working demo for this guide from the twbs/examples repository. You can also open the example in StackBlitz but not run it because Parcel isn\u2019t currently supported there.Setup We\u2019re building a Parcel project with Bootstrap from scratch, so there are some prerequisites and upfront steps before we can really get started. This guide requires you to have Node.js installed and some familiarity with the terminal.Create a project folder and set up npm. We\u2019ll create the my-project folder and initialize npm with the -y argument to avoid it asking us all the interactive questions.mkdir my-project && cd my-projectnpm init -yInstall Parcel. Unlike our Webpack guide, there\u2019s only a single build tool dependency here. Parcel will automatically install language transformers (like Sass) as it detects them. We use --save-dev to signal that this dependency is only for development use and not for production.npm i --save-dev parcelInstall Bootstrap. Now we can install Bootstrap. We\u2019ll also install Popper since our dropdowns, popovers, and tooltips depend on it for their positioning. If you don\u2019t plan on using those components, you can omit Popper here.npm i --save bootstrap @popperjs/coreNow that we have all the necessary dependencies installed, we can get to work creating the project files and importing Bootstrap.Project structure We\u2019ve already created the my-project folder and initialized npm. Now we\u2019ll also create our src folder, stylesheet, and JavaScript file to round out the project structure. Run the following from my-project, or manually create the folder and file structure shown below.mkdir {src,src/js,src/scss}touch src/index.html src/js/main.js src/scss/styles.scssWhen you\u2019re done, your complete project should look like this:my-project/\u251c\u2500\u2500 src/\u2502   \u251c\u2500\u2500 js/\u2502   \u2502   \u2514\u2500\u2500 main.js\u2502   \u251c\u2500\u2500 scss/\u2502   \u2502   \u2514\u2500\u2500 styles.scss\u2502   \u2514\u2500\u2500 index.html\u251c\u2500\u2500 package-lock.json\u2514\u2500\u2500 package.jsonAt this point, everything is in the right place, but Parcel needs an HTML page and npm script to start our server.Configure Parcel With dependencies installed and our project folder ready for us to start coding, we can now configure Parcel and run our project locally. Parcel itself requires no configuration file by design, but we do need an npm script and an HTML file to start our server.Fill in the src/index.html file. Parcel needs a page to render, so we use our index.html page to set up some basic HTML, including our CSS and JavaScript files.<!doctype html><html lang=\"en\">  <head>    <meta charset=\"utf-8\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <title>Bootstrap w/ Parcel</title>    <link rel=\"stylesheet\" href=\"scss/styles.scss\">    <script type=\"module\" src=\"js/main.js\"></script>  </head>  <body>    <div class=\"container py-4 px-3 mx-auto\">      <h1>Hello, Bootstrap and Parcel!</h1>      <button class=\"btn btn-primary\">Primary button</button>    </div>  </body></html>We\u2019re including a little bit of Bootstrap styling here with the div class=\"container\" and <button> so that we see when Bootstrap\u2019s CSS is loaded by Parcel.Parcel will automatically detect we\u2019re using Sass and install the Sass Parcel plugin to support it. However, if you wish, you can also manually run npm i --save-dev @parcel/transformer-sass.Add the Parcel npm scripts. Open the package.json and add the following start script to the scripts object. We\u2019ll use this script to start our Parcel development server and render the HTML file we created after it\u2019s compiled into the dist directory.{   // ...   \"scripts\": {     \"start\": \"parcel serve src/index.html --public-url / --dist-dir dist\",     \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"   },   // ...}And finally, we can start Parcel. From the my-project folder in your terminal, run that newly added npm script:npm startIn the next and final section to this guide, we\u2019ll import all of Bootstrap\u2019s CSS and JavaScript.Import Bootstrap Importing Bootstrap into Parcel requires two imports, one into our styles.scss and one into our main.js.Import Bootstrap\u2019s CSS. Add the following to src/scss/styles.scss to import all of Bootstrap\u2019s source Sass.// Import all of Bootstrap's CSS@import \"bootstrap/scss/bootstrap\";You can also import our stylesheets individually if you want. Read our Sass import docs for details.Import Bootstrap\u2019s JS. Add the following to src/js/main.js to import all of Bootstrap\u2019s JS. Popper will be imported automatically through Bootstrap.// Import all of Bootstrap's JSimport * as bootstrap from 'bootstrap'You can also import JavaScript plugins individually as needed to keep bundle sizes down:import Alert from 'bootstrap/js/dist/alert'// or, specify which plugins you need:import { Tooltip, Toast, Popover } from 'bootstrap'Read our JavaScript docs for more information on how to use Bootstrap\u2019s plugins.And you\u2019re done! \ud83c\udf89 With Bootstrap\u2019s source Sass and JS fully loaded, your local development server should now look like this:Now you can start adding any Bootstrap components you want to use. Be sure to check out the complete Parcel example project for how to include additional custom Sass and optimize your build by importing only the parts of Bootstrap\u2019s CSS and JS that you need.See something wrong or out of date here? Please open an issue on GitHub. Need help troubleshooting? Search or start a discussion on GitHub."
}